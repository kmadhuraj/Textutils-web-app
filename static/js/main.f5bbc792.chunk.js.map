{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/About.js","components/Alert.js","components/Footer.js","components/ErrorPage.js","App.js","index.js"],"names":["Navbar","props","React","createElement","Fragment","className","concat","mode","Link","to","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","Hometext","onClick","toggleMode","role","htmlFor","TextForm","copie","setCopie","useState","text","setText","style","color","marginTop","heading","backgroundColor","name","value","onChange","event","target","handleUppercase","uppercase","toUpperCase","showalert","handleLowercase","lowercase","toLowerCase","handleTitlecase","split","i","length","charAt","slice","join","handlSentcase","sentCase","handleExtraSpace","RemoveExtraSpace","replace","CopyText","copytext","document","getElementById","navigator","clipboard","writeText","clearText","clear","getElementsByClassName","trim","filter","word","About","data-bs-parent","Alert","alert","lower","capitalize","msg","Footer","ErrorPage","App","SetMode","SetAlert","ShowAlert","message","setTimeout","BrowserRouter","basename","body","Routes","Route","path","element","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.f5bbc792.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from \"react-router-dom\";\n\n\nexport default function Navbar(props) {\n  return (\n   <>\n\n\n\n<nav className={`navbar navbar-expand-lg text-${props.mode==='light'?'dark':'light'} bg-${props.mode}`}>\n  <div className=\"container-fluid\">\n    <Link className={`navbar-brand text-${props.mode==='info'?'dark':'light'}` } to=\"/\">{props.title}</Link>\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"toggle navigation\">\n      <span className=\"navbar-toggler-icon\"></span>\n    </button>\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0 \">\n        <li className=\"nav-item \">\n          <Link className={`nav-link active text-${props.mode==='info'?'dark':'light'}`}  aria-current=\"page\" to=\"/\">{props.Hometext}</Link>\n        </li>\n        <li className=\"nav-item\">\n          <Link className={`nav-link text-${props.mode==='info'?'dark':'light'}`} to=\"/about\">About</Link>\n        </li>  \n      </ul>\n\n        <div className={`form-check form-switch text-${props.mode==='info'?'dark':'light'}`}>\n            <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">{props.mode==='info'?'Enable Dark Mode':'Enable Light Mode'}</label>\n        </div>\n\n    </div>\n  </div>\n</nav>\n\n\n   </>\n  )\n}\n\nNavbar.propTypes = {\n    title: PropTypes.string.isRequired,\n    Hometext: PropTypes.string.isRequired\n\n}\n","import React from 'react'\nimport { useState } from 'react'\nimport \"./../assets/css/Textform.css\"\nexport default function TextForm(props) {\n\n    const handleUppercase=()=>{\n        // console.log(\"uppercase button clicked\");\n        let uppercase=text.toUpperCase();\n        setText(uppercase);\n        props.showalert(\"Text changed to uppercase\",\"success\")\n\n    }\n    const handleLowercase=()=>{\n        // console.log(\"lowecase clicked\")\n        let lowercase=text.toLowerCase();\n        setText(lowercase);\n        props.showalert(\"Text changed to Lowercase\",\"success\")\n    }\n\n    //title case\n    const handleTitlecase = () => {\n        let lowercase = text.toLowerCase().split(\" \");\n    \n        for (var i = 0; i < lowercase.length; i++) {\n            lowercase[i] = lowercase[i].charAt(0).toUpperCase() + lowercase[i].slice(1);\n        }\n    \n        setText(lowercase.join(' '));\n        props.showalert(\"Text changed to Titlecase\",\"success\")\n    }\n    // sentence case \n    const handlSentcase = () => {\n        if (text.length > 0) {\n            let sentCase= text.charAt(0).toUpperCase() + text.slice(1).toLowerCase();\n            setText(sentCase);\n            props.showalert(\"Text changed to Sentencecase\",\"success\")\n        }\n    }\n    \n    const handleExtraSpace=()=>{\n        let RemoveExtraSpace=text.replace(/\\s+/g,\" \")\n        setText(RemoveExtraSpace);\n        props.showalert(\"Extra space is removed\",\"success\")\n\n    }\n\n    //copy functionality\n\n    \n    const [copie,setCopie]=useState(\"Copy Text\")\n    const CopyText=()=>{\n        let copytext=document.getElementById(\"text\");\n        let Copiedtext=navigator.clipboard.writeText(copytext.value);//used to copy to clipboard\n        if (Copiedtext)\n        {\n            setCopie(\"Copied\")\n            props.showalert(\"Text copied\",\"success\")\n        }\n        \n \n        \n    }\n\n    // for clearing all text\n\n    const clearText =()=>{\n        let clear=document.getElementsByClassName(\"text\").value=\"\";\n        setText(clear);\n        setCopie(\"Copy Text\")\n        props.showalert(\"Text cleared\",\"success\")\n        //we can use above method to clear text  or by use settext(\"\") as well as\n        // setText(\"\")\n    }\n\n    const handleOnChange=(event)=>{//event key word is used to handle the events\n        setText(event.target.value)//here event.target.value ,here  it is targetting the value field in the textarea element in html \n        setCopie('Copy Text');//we only used setCopie to change the text (copy text)\n    }\n\n    const[text,setText] = useState(\"\");//this is used to change the text fiels to \"\"\n    \n\n    //custom css \n    let margin={\n\n        marginTop:'40px'\n    };\n\n    \n    \n\n  return (\n    <>\n    \n    <div className=\"Text-container\" style={{color: props.mode==='info'?'black':'white'}} >\n        <h2 style={margin} >{props.heading}</h2>\n        <div className=\"mb-3\">\n            <textarea className=\"txt-area w-100\" style={{backgroundColor: props.mode==='info'?'white':'gray',color: props.mode==='info'?'black':'white'}} name=\"text\" value={text} onChange={handleOnChange} id=\"text\"  ></textarea>\n        </div>\n\n        <div className=\"btn-container\">\n                <button className=\"btn btn-info \" onClick={handleUppercase} >Convert to Uppper case</button>\n                <button className=\"btn btn-info mx-2\" onClick={handleLowercase} >Convert to Lower case</button>\n                <button className=\"btn btn-info \" onClick={handleTitlecase}>Convert to Title case</button>\n                <button className=\"btn btn-info mx-2\" onClick={handlSentcase}>Convert to Sentence case</button>\n                <button className=\"btn btn-info \" onClick={handleExtraSpace}>Remove Extra Space</button>\n                <button className=\"btn btn-info mx-2\" onClick={CopyText}>{copie}</button>\n                <button className=\"btn btn-info my-2\" onClick={clearText}>Clear</button>\n        </div>\n\n    </div>\n\n    <div  className=\"text-container\" style={{color: props.mode==='info'?'black':'white'}} >\n        <h4>The summary of your text</h4>\n\n        {/* it calculates the total no of words and its length */}\n        <p className=\"fw-medium\" style={{color: props.mode==='info'?'#403D39':'#D5C4AE'}}>Total words: {text.trim().split((/\\s+/)).filter(word => word.length > 0).length}  Total Characters: {text.trim().length}</p>\n\n        {/* calculates total time taken for reading text (slow reader) */}\n        <p className=\"fw-medium \" style={{color: props.mode==='info'?'#403D39':'#D5C4AE'}}>Minutes to read the above text: {0.008 * text.trim().split(/\\s+/).length }</p>\n\n        <h4 >Preview</h4>\n        {/* gives preview of above text  */}\n        {/* color: text.length > 0 ? 'white' : '#403D39' */}\n        <p style={{color: props.mode==='info'?'#403D39':'#D5C4AE' }}>\n             {text.length > 0 ? text : 'Enter text in the above Textfield to preview'}\n        </p>\n        \n\n    </div>\n   \n\n    </>\n    \n  )\n}\n","import React from \"react\";\n\nexport default function About(props) {\n    return (\n        <>\n            <div className=\"container \">\n                {/* <h2 style={{color:props.mode==='info'? 'black':'white',}}>About Us</h2> */}\n                <div className=\"accordion \" id=\"accordionExample\">\n                    <div className=\"accordion-item \" style={{ marginTop: \"30px\" }}>\n                        <h2 className=\"accordion-header\">\n                            <button\n                                className=\"accordion-button\"\n                                type=\"button\"\n                                data-bs-toggle=\"collapse\"\n                                data-bs-target=\"#collapseOne\"\n                                aria-expanded=\"true\"\n                                aria-controls=\"collapseOne\"\n                                style={{ backgroundColor: props.mode === \"info\" ? \"white\" : \"gray\" ,color:props.mode==='info'?'black':'white'}}\n                            >\n                                About Us\n                            </button>\n                        </h2>\n                        <div\n                            id=\"collapseOne\"\n                            className=\"accordion-collapse collapse show\"\n                            data-bs-parent=\"#accordionExample\"\n                        >\n                            <div\n                                className=\"accordion-body\"\n                                style={{\n                                    backgroundColor: props.mode === \"info\" ? \"white\" : \"gray\",\n                                    color: props.mode === \"info\" ? \"black\" : \"white\",\n                                }}\n                            >\n                                <strong>Welcome to TextUtils  Your Text Manipulation Hub! </strong>At TextUtils, our mission\n                                is to provide a convenient platform for users to perform various text operations with ease.\n                                Whether you need to convert text to uppercase or lowercase, remove extra spaces, or analyze\n                                the word count, TextUtils has got you covered. <br />\n                                <strong>Key Features:</strong> <br />\n                                <ol>\n                                        <li><strong>Text Case Conversion:</strong> Quickly convert text to uppercase,lowercase, title case, or sentence case.</li>\n\n            \n                                        <li>\n                                            <strong>Whitespace Management:</strong> Remove extra spaces and ensure clean and well-formatted text.\n                                        </li>\n\n                                        <li><strong>Word Count:</strong>   Get insights into the number of words and characters in your text.</li>\n                                        <li>\n                                            <strong>Copy to Clipboard:</strong> Easily copy the manipulated text to your clipboard for quick sharing\n                                        </li>\n                                </ol>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n}\n","import React from \"react\";\n\n\nexport default function Alert(props) {\n    const capitalize=(word)=>{\n        const lower=word.toLowerCase();\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\n    }\n    return (\n        <div>\n             {props.alert &&( <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\n                <strong>{capitalize(props.alert.type)}</strong>:{props.alert.msg}\n               \n            </div>\n             )}\n        </div>\n    );\n}\n","import React from 'react'\nimport \"./../assets/css/Footer.css\";\n\n\n\n\nexport default function Footer() {\n  return (\n    <footer className=\"footer-container \">\n        <ul>\n            \n            <li>@2023 Copyright by Madhuraj</li>\n        </ul>\n      \n    </footer>\n  )\n}\n","import React from 'react'\n\nexport default function ErrorPage() {\n  return (\n    <div>\n      <h1>404 Error page</h1>\n    </div>\n  )\n}\n","import './App.css';\nimport React from 'react';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport About from './components/About';\nimport Alert from './components/Alert';\nimport { useState } from 'react';\nimport Footer from './components/Footer';\nimport ErrorPage from './components/ErrorPage';\n\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\n\n\n\nfunction App() {\n\n  const[mode,SetMode]=useState(\"info\");\n  const[alert,SetAlert]=useState(null)\n\n  const ShowAlert=(message,type)=>{\n    SetAlert({\n      msg: message,\n      type: type\n    })\n\n    setTimeout(()=>{\n      SetAlert(null);\n  }, 1800);\n  \n\n  }\n \n  \n  const toggleMode=()=>{\n    if(mode ==='info'){\n      SetMode('dark');\n      document.body.style.backgroundColor=\"#343a40\";\n      ShowAlert(\"Dark mode is enabled\",\"success\")\n      document.title=\"TextUtils-Dark Mode\"\n\n    \n    }\n    else{\n      SetMode('info');\n      document.body.style.backgroundColor=\"#c2ecf3\";\n      ShowAlert(\"Light mode is enabled\",\"success\")\n      document.title=\"TextUtils-Light Mode\"\n     \n    }\n      \n  }\n  return (\n    \n <>\n<BrowserRouter basename='Textutils-web-app'>\n\n<div className=\"main-container\">\n<Navbar title=\"TextUtils\" Hometext=\"Home\" mode={mode} toggleMode={toggleMode}/>\n\n<Alert alert={alert}/>\n\n\n<div className=\"container\">\n      <Routes>\n\n        <Route path=\"*\" element={<ErrorPage/> }/>\n        <Route path=\"/\" element={<TextForm heading=\"Enter Text to Analyse\" mode={mode} showalert={ShowAlert}/>} />\n        <Route path=\"/about\" element={<About mode={mode}/>} />\n        \n      </Routes>\n\n</div>\n<Footer/>\n</div>\n\n</BrowserRouter>\n\n</>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\n\nconst root=ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>\n)\n\n\n\n// reportWebVitals();\n"],"sourceRoot":""}